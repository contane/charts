name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "contane-bot"
          git config user.email "160241315+contane-bot@users.noreply.github.com"
      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Install sigstore plugin
        run: helm plugin install https://github.com/sigstore/helm-sigstore
      - name: Prepare PGP key
        run: |
          # The IFS="" ensures the multiline PGP_PRIVATE_KEY is read correctly, preserving newlines and spaces.
          IFS=""
          echo "$PGP_PRIVATE_KEY" | gpg --dearmor > $HOME/secring.gpg
          echo "$PGP_PASSPHRASE" > $HOME/passphrase.txt
          # Unfortunately, the public key must be in binary format because sigstore does not support ASCII-armored keys.
          # $PGP_PUBLIC_KEY is base64-encoded, so we decode it to binary and write it to $HOME/pubring.gpg.
          echo "$PGP_PUBLIC_KEY_BINARY" | base64 --decode > $HOME/pubring.gpg
          
          # Set environment variables in $GITHUB_ENV to make them accessible to subsequent steps in the workflow.
          echo "CR_KEYRING=$HOME/secring.gpg" >> "$GITHUB_ENV"
          echo "CR_PASSPHRASE_FILE=$HOME/passphrase.txt" >> "$GITHUB_ENV"
          echo "KEYRING=$HOME/pubring.gpg" >> "$GITHUB_ENV"
        env:
          PGP_PRIVATE_KEY: "${{ secrets.PGP_PRIVATE_KEY }}"
          PGP_PASSPHRASE: "${{ secrets.PGP_PASSPHRASE }}"
          PGP_PUBLIC_KEY_BINARY: "${{ secrets.PGP_PUBLIC_KEY_BINARY }}"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          config: "./.github/configs/cr.yml"
        env:
          CR_TOKEN: "${{ secrets.CONTANE_BOT_TOKEN }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: "contane-bot"
          password: ${{ secrets.CONTANE_BOT_TOKEN }}
      - name: Push chart to GitHub Container Registry and sigstore Rekor
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" oci://ghcr.io/${{ github.repository }}
            helm sigstore upload "${pkg}"
          done
